<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Achat extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Achat_model');
    } 

    /*
     * Listing of achats
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('achat/index?');
        $config['total_rows'] = $this->Achat_model->get_all_achats_count();
        $this->pagination->initialize($config);

        $data['achats'] = $this->Achat_model->get_all_achats($params);
        
        $data['_view'] = 'achat/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new achat
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('client_sid','Client Sid','required');
		$this->form_validation->set_rules('livre_sid','Livre Sid','required');
		$this->form_validation->set_rules('qte_livre','Qte Livre','required');
		
		if($this->form_validation->run())     
        {   

                $qte_livre = $this->input->post('qte_livre');
                $prix_livre = $this->input->post('prix_livre');
                $prix_total=$qte_livre*$prix_livre;

                $params = array(
                    'client_sid' => $this->input->post('client_sid'),
                    'livre_sid' => $this->input->post('livre_sid'),
                    'date_achat' => date('Y-m-d H:i:s'),
                    'qte_livre' => $qte_livre,
                    'prix_livre' => $prix_livre,
                    'prix_total' => $prix_total,
                    'devise_prix' => $this->input->post('devise_prix'),
                );

            
            $achat_id = $this->Achat_model->add_achat($params);
            redirect('achat/index');
        }
        else
        {
			$this->load->model('Client_model');
			$data['all_clients'] = $this->Client_model->get_all_clients();

			$this->load->model('Livre_model');
			$data['all_livres'] = $this->Livre_model->get_all_livres();
            
            $data['_view'] = 'achat/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a achat
     */
    function edit($achat_id)
    {   
        // check if the achat exists before trying to edit it
        $data['achat'] = $this->Achat_model->get_achat($achat_id);
        
        if(isset($data['achat']['achat_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('client_sid','Client Sid','required');
			$this->form_validation->set_rules('livre_sid','Livre Sid','required');
			$this->form_validation->set_rules('qte_livre','Qte Livre','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'client_sid' => $this->input->post('client_sid'),
					'livre_sid' => $this->input->post('livre_sid'),
					'date_achat' => $this->input->post('date_achat'),
					'qte_livre' => $this->input->post('qte_livre'),
					'prix_livre' => $this->input->post('prix_livre'),
					'prix_total' => $this->input->post('prix_total'),
                );

                $this->Achat_model->update_achat($achat_id,$params);            
                redirect('achat/index');
            }
            else
            {
				$this->load->model('Client_model');
				$data['all_clients'] = $this->Client_model->get_all_clients();

				$this->load->model('Livre_model');
				$data['all_livres'] = $this->Livre_model->get_all_livres();

                $data['_view'] = 'achat/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The achat you are trying to edit does not exist.');
    } 

    /*
     * Deleting achat
     */
    function remove($achat_id)
    {
        $achat = $this->Achat_model->get_achat($achat_id);

        // check if the achat exists before trying to delete it
        if(isset($achat['achat_id']))
        {
            $this->Achat_model->delete_achat($achat_id);
            redirect('achat/index');
        }
        else
            show_error('The achat you are trying to delete does not exist.');
    }
    
}
