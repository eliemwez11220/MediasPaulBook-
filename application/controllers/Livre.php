<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Livre extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Livre_model');
    } 

    /*
     * Listing of livres
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('livre/index?');
        $config['total_rows'] = $this->Livre_model->get_all_livres_count();
        $this->pagination->initialize($config);

        $data['livres'] = $this->Livre_model->get_all_livres($params);
        
        $data['_view'] = 'livre/index';
        $this->load->view('layouts/main',$data);
    }
function catalogue()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('livre/index?');
        $config['total_rows'] = $this->Livre_model->get_all_livres_count();
        $this->pagination->initialize($config);

        $data['livres'] = $this->Livre_model->get_catalogue();
        
        $data['_view'] = 'livre/catalogue';
        $this->load->view('layouts/main',$data);
    }
    /*
     * Adding a new livre
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('num_inventaire','Num Inventaire','required|is_unique[livres.num_inventaire]');
		$this->form_validation->set_rules('prix_livre','Prix Livre','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'etat_livre' => $this->input->post('etat_livre'),
				'ouvrage_sid' => $this->input->post('ouvrage_sid'),
				'num_inventaire' => $this->input->post('num_inventaire'),
				'prix_livre' => $this->input->post('prix_livre'),
				//'date_ajout' => $this->input->post('date_ajout'),
				'devise_prix' => $this->input->post('devise_prix'),
				'date_pub' => $this->input->post('date_pub'),
				'observation' => $this->input->post('observation'),
            );
            
            $livre_id = $this->Livre_model->add_livre($params);
            redirect('livre/index');
        }
        else
        {
			$this->load->model('Ouvrage_model');
			$data['all_ouvrages'] = $this->Ouvrage_model->get_all_ouvrages();
            
            $data['_view'] = 'livre/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a livre
     */
    function edit($liv_id)
    {   
        // check if the livre exists before trying to edit it
        $data['livre'] = $this->Livre_model->get_livre($liv_id);
        
        if(isset($data['livre']['liv_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('num_inventaire','Num Inventaire','required');
			$this->form_validation->set_rules('prix_livre','Prix Livre','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'etat_livre' => $this->input->post('etat_livre'),
					'ouvrage_sid' => $this->input->post('ouvrage_sid'),
					'num_inventaire' => $this->input->post('num_inventaire'),
					'prix_livre' => $this->input->post('prix_livre'),
					//'date_ajout' => $this->input->post('date_ajout'),
					'devise_prix' => $this->input->post('devise_prix'),
					'date_pub' => $this->input->post('date_pub'),
					'observation' => $this->input->post('observation'),
                );

                $this->Livre_model->update_livre($liv_id,$params);            
                redirect('livre/index');
            }
            else
            {
				$this->load->model('Ouvrage_model');
				$data['all_ouvrages'] = $this->Ouvrage_model->get_all_ouvrages();

                $data['_view'] = 'livre/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The livre you are trying to edit does not exist.');
    } 

    /*
     * Deleting livre
     */
    function remove($liv_id)
    {
        $livre = $this->Livre_model->get_livre($liv_id);

        // check if the livre exists before trying to delete it
        if(isset($livre['liv_id']))
        {
            $this->Livre_model->delete_livre($liv_id);
            redirect('livre/index');
        }
        else
            show_error('The livre you are trying to delete does not exist.');
    }
    
}
