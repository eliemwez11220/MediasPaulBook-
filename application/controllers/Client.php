<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Client extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Client_model');
    } 

    /*
     * Listing of clients
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('client/index?');
        $config['total_rows'] = $this->Client_model->get_all_clients_count();
        $this->pagination->initialize($config);

        $data['clients'] = $this->Client_model->get_all_clients($params);
        
        $data['_view'] = 'client/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new client
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nom_client','Nom Client','required');
		$this->form_validation->set_rules('phone_client','Phone Client','required|is_unique[clients.phone_client]');
		$this->form_validation->set_rules('email_client','Email Client','required|is_unique[clients.email_client]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nom_client' => $this->input->post('nom_client'),
				'phone_client' => $this->input->post('phone_client'),
				'email_client' => $this->input->post('email_client'),
				'ville_client' => $this->input->post('ville_client'),
				'code_postal' => $this->input->post('code_postal'),
				//'date_ajout' => $this->input->post('date_ajout'),
            );
            
            $client_id = $this->Client_model->add_client($params);
            redirect('client/index');
        }
        else
        {            
            $data['_view'] = 'client/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a client
     */
    function edit($cli_id)
    {   
        // check if the client exists before trying to edit it
        $data['client'] = $this->Client_model->get_client($cli_id);
        
        if(isset($data['client']['cli_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nom_client','Nom Client','required');
			$this->form_validation->set_rules('phone_client','Phone Client','required');
			$this->form_validation->set_rules('email_client','Email Client','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nom_client' => $this->input->post('nom_client'),
					'phone_client' => $this->input->post('phone_client'),
					'email_client' => $this->input->post('email_client'),
					'ville_client' => $this->input->post('ville_client'),
					'code_postal' => $this->input->post('code_postal'),
					//'date_ajout' => $this->input->post('date_ajout'),
                );

                $this->Client_model->update_client($cli_id,$params);            
                redirect('client/index');
            }
            else
            {
                $data['_view'] = 'client/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The client you are trying to edit does not exist.');
    } 

    /*
     * Deleting client
     */
    function remove($cli_id)
    {
        $client = $this->Client_model->get_client($cli_id);

        // check if the client exists before trying to delete it
        if(isset($client['cli_id']))
        {
            $this->Client_model->delete_client($cli_id);
            redirect('client/index');
        }
        else
            show_error('The client you are trying to delete does not exist.');
    }
    
}
