<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Ouvrage extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Ouvrage_model');
    } 

    /*
     * Listing of ouvrages
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('ouvrage/index?');
        $config['total_rows'] = $this->Ouvrage_model->get_all_ouvrages_count();
        $this->pagination->initialize($config);

        $data['ouvrages'] = $this->Ouvrage_model->get_all_ouvrages($params);
        
        $data['_view'] = 'ouvrage/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new ouvrage
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('code_isbn','Code Isbn','required|is_unique[ouvrages.code_isbn]');
		$this->form_validation->set_rules('annee_pub','Annee Pub','required');
		$this->form_validation->set_rules('edition_pub','Edition Pub','required');
		$this->form_validation->set_rules('lieu_pub','Lieu Pub','required');
		$this->form_validation->set_rules('titre_ouvrage','Titre Ouvrage','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'auteur_sid' => $this->input->post('auteur_sid'),
				'code_isbn' => $this->input->post('code_isbn'),
				'annee_pub' => $this->input->post('annee_pub'),
				'edition_pub' => $this->input->post('edition_pub'),
				'lieu_pub' => $this->input->post('lieu_pub'),
				'nbre_livres' => $this->input->post('nbre_livres'),
				//'date_ajout' => $this->input->post('date_ajout'),
				'titre_ouvrage' => $this->input->post('titre_ouvrage'),
				'resume_ouvrage' => $this->input->post('resume_ouvrage'),
            );
            
            $ouvrage_id = $this->Ouvrage_model->add_ouvrage($params);
            redirect('ouvrage/index');
        }
        else
        {
			$this->load->model('Auteur_model');
			$data['all_auteurs'] = $this->Auteur_model->get_all_auteurs();
            
            $data['_view'] = 'ouvrage/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a ouvrage
     */
    function edit($ouv_id)
    {   
        // check if the ouvrage exists before trying to edit it
        $data['ouvrage'] = $this->Ouvrage_model->get_ouvrage($ouv_id);
        
        if(isset($data['ouvrage']['ouv_id']))
        {
            $this->load->library('form_validation');

			//$this->form_validation->set_rules('code_isbn','Code Isbn','required|is_unique[code_isbn]');
			$this->form_validation->set_rules('annee_pub','Annee Pub','required');
			$this->form_validation->set_rules('edition_pub','Edition Pub','required');
			$this->form_validation->set_rules('lieu_pub','Lieu Pub','required');
			$this->form_validation->set_rules('titre_ouvrage','Titre Ouvrage','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'auteur_sid' => $this->input->post('auteur_sid'),
					'code_isbn' => $this->input->post('code_isbn'),
					'annee_pub' => $this->input->post('annee_pub'),
					'edition_pub' => $this->input->post('edition_pub'),
					'lieu_pub' => $this->input->post('lieu_pub'),
					'nbre_livres' => $this->input->post('nbre_livres'),
					//'date_ajout' => $this->input->post('date_ajout'),
					'titre_ouvrage' => $this->input->post('titre_ouvrage'),
					'resume_ouvrage' => $this->input->post('resume_ouvrage'),
                );

                $this->Ouvrage_model->update_ouvrage($ouv_id,$params);            
                redirect('ouvrage/index');
            }
            else
            {
				$this->load->model('Auteur_model');
				$data['all_auteurs'] = $this->Auteur_model->get_all_auteurs();

                $data['_view'] = 'ouvrage/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The ouvrage you are trying to edit does not exist.');
    } 

    /*
     * Deleting ouvrage
     */
    function remove($ouv_id)
    {
        $ouvrage = $this->Ouvrage_model->get_ouvrage($ouv_id);

        // check if the ouvrage exists before trying to delete it
        if(isset($ouvrage['ouv_id']))
        {
            $this->Ouvrage_model->delete_ouvrage($ouv_id);
            redirect('ouvrage/index');
        }
        else
            show_error('The ouvrage you are trying to delete does not exist.');
    }
    
}
