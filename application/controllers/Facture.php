<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Facture extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Facture_model');
    } 

    /*
     * Listing of factures
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('facture/index?');
        $config['total_rows'] = $this->Facture_model->get_all_factures_count();
        $this->pagination->initialize($config);

        $data['factures'] = $this->Facture_model->get_all_factures($params);
        
        $data['_view'] = 'facture/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new facture
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('numer_facture','Numer Facture','is_unique[factures.numer_facture]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'client_sid' => $this->input->post('client_sid'),
				'etat_facture' => $this->input->post('etat_facture'),
				'numer_facture' => $this->input->post('numer_facture'),
				'date_facture' => date('Y-m-d H:i:s'),
				'net_a_payer' => $this->input->post('net_a_payer'),
            );
            
            $facture_id = $this->Facture_model->add_facture($params);
            redirect('facture/index');
        }
        else
        {
			$this->load->model('Client_model');
			$data['all_clients'] = $this->Client_model->get_all_clients();
            
            $data['_view'] = 'facture/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a facture
     */
    function edit($fac_id)
    {   
        // check if the facture exists before trying to edit it
        $data['facture'] = $this->Facture_model->get_facture($fac_id);
        
        if(isset($data['facture']['fac_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('numer_facture','Numer Facture','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'client_sid' => $this->input->post('client_sid'),
					'etat_facture' => $this->input->post('etat_facture'),
					'numer_facture' => $this->input->post('numer_facture'),
					
					'net_a_payer' => $this->input->post('net_a_payer'),
                );

                $this->Facture_model->update_facture($fac_id,$params);            
                redirect('facture/index');
            }
            else
            {
				$this->load->model('Client_model');
				$data['all_clients'] = $this->Client_model->get_all_clients();

                $data['_view'] = 'facture/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The facture you are trying to edit does not exist.');
    } 
    function print($fac_id)
    {   
        // check if the facture exists before trying to edit it
        $data['facture'] = $this->Facture_model->get_facture($fac_id);
        
        if(isset($data['facture']['fac_id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('numer_facture','Numer Facture','is_unique[numer_facture]');
        
            if($this->form_validation->run())     
            {   
                $params = array(
                    'client_sid' => $this->input->post('client_sid'),
                    'etat_facture' => $this->input->post('etat_facture'),
                    'numer_facture' => $this->input->post('numer_facture'),
                    'date_facture' => $this->input->post('date_facture'),
                    'net_a_payer' => $this->input->post('net_a_payer'),
                );

                $this->Facture_model->update_facture($fac_id,$params);            
                redirect('facture/index');
            }
            else
            {
                $this->load->model('Client_model');
                $data['all_clients'] = $this->Client_model->get_all_clients();

                $data['_view'] = 'facture/print';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The facture you are trying to print does not exist.');
    } 

    /*
     * Deleting facture
     */
    function remove($fac_id)
    {
        $facture = $this->Facture_model->get_facture($fac_id);

        // check if the facture exists before trying to delete it
        if(isset($facture['fac_id']))
        {
            $this->Facture_model->delete_facture($fac_id);
            redirect('facture/index');
        }
        else
            show_error('The facture you are trying to delete does not exist.');
    }
    
}
