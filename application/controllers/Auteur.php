<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Auteur extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Auteur_model');
    } 

    /*
     * Listing of auteurs
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('auteur/index?');
        $config['total_rows'] = $this->Auteur_model->get_all_auteurs_count();
        $this->pagination->initialize($config);

        $data['auteurs'] = $this->Auteur_model->get_all_auteurs($params);
        
        $data['_view'] = 'auteur/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new auteur
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('adresse_email','Adresse Email','is_unique[auteurs.adresse_email]');
		$this->form_validation->set_rules('nom_auteur','Nom Auteur','required');
		$this->form_validation->set_rules('contact','Contact','is_unique[auteurs.contact]');
		$this->form_validation->set_rules('prenom_auteur','Prenom Auteur','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				
				'adresse_email' => $this->input->post('adresse_email'),
				'nom_auteur' => $this->input->post('nom_auteur'),
				'prenom_auteur' => $this->input->post('prenom_auteur'),
				'domaine_experience' => $this->input->post('domaine_experience'),
				'biographie' => $this->input->post('biographie'),
				'contact' => $this->input->post('contact'),
            );
            
            $auteur_id = $this->Auteur_model->add_auteur($params);
            redirect('auteur/index');
        }
        else
        {            
            $data['_view'] = 'auteur/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a auteur
     */
    function edit($aut_id)
    {   
        // check if the auteur exists before trying to edit it
        $data['auteur'] = $this->Auteur_model->get_auteur($aut_id);
        
        if(isset($data['auteur']['aut_id']))
        {
            $this->load->library('form_validation');

			//$this->form_validation->set_rules('adresse_email','Adresse Email','is_unique[quteuadresse_email]');
			$this->form_validation->set_rules('nom_auteur','Nom Auteur','required');
			//$this->form_validation->set_rules('contact','Contact','is_unique[contact]');
			$this->form_validation->set_rules('prenom_auteur','Prenom Auteur','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					
					'adresse_email' => $this->input->post('adresse_email'),
					'nom_auteur' => $this->input->post('nom_auteur'),
					'prenom_auteur' => $this->input->post('prenom_auteur'),
					'domaine_experience' => $this->input->post('domaine_experience'),
					'biographie' => $this->input->post('biographie'),
					'contact' => $this->input->post('contact'),
                );

                $this->Auteur_model->update_auteur($aut_id,$params);            
                redirect('auteur/index');
            }
            else
            {
                $data['_view'] = 'auteur/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The auteur you are trying to edit does not exist.');
    } 

    /*
     * Deleting auteur
     */
    function remove($aut_id)
    {
        $auteur = $this->Auteur_model->get_auteur($aut_id);

        // check if the auteur exists before trying to delete it
        if(isset($auteur['aut_id']))
        {
            $this->Auteur_model->delete_auteur($aut_id);
            redirect('auteur/index');
        }
        else
            show_error('The auteur you are trying to delete does not exist.');
    }
    
}
